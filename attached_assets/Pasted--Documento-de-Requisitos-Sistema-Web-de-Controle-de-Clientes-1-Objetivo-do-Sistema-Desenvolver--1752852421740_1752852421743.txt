üìÑ Documento de Requisitos ‚Äî Sistema Web de Controle de Clientes
1. Objetivo do Sistema
Desenvolver um sistema web simples que permita o controle de clientes, com funcionalidades de login de usu√°rios, cadastro de novos clientes e consulta aos dados j√° registrados.

2. Funcionalidades Principais
2.1. Autentica√ß√£o (Login)
Tela de login com campos:

E-mail

Senha

Valida√ß√£o de credenciais no backend

Redirecionamento para a tela principal ap√≥s login bem-sucedido

Sess√£o/autentica√ß√£o mantida at√© logout manual

2.2. Cadastro de Cliente
Tela acess√≠vel ap√≥s login

Campos obrigat√≥rios:

Nome completo

E-mail

Campos opcionais:

Telefone

Endere√ßo

Observa√ß√µes

Bot√£o "Salvar"

Valida√ß√£o de dados (e.g., e-mail v√°lido, telefone num√©rico)

2.3. Consulta/Listagem de Clientes
Exibi√ß√£o em tabela com:

Nome

E-mail

Telefone

Campo de busca (por nome ou e-mail)

Pagina√ß√£o (caso a quantidade de registros ultrapasse o limite por p√°gina)

2.4. Logout
Bot√£o para sair do sistema e encerrar a sess√£o

3. Requisitos Funcionais (RF)
C√≥digo	Descri√ß√£o
RF01	O sistema deve permitir o login de usu√°rios cadastrados.
RF02	O sistema deve validar as credenciais do usu√°rio no backend.
RF03	O sistema deve permitir o cadastro de novos clientes.
RF04	O sistema deve validar os campos obrigat√≥rios do formul√°rio de cliente.
RF05	O sistema deve permitir consultar clientes cadastrados por nome ou e-mail.
RF06	O sistema deve manter a sess√£o do usu√°rio enquanto estiver logado.
RF07	O sistema deve permitir logout.

4. Requisitos N√£o Funcionais (RNF)
C√≥digo	Descri√ß√£o
RNF01	O sistema deve ser acess√≠vel via navegador (web).
RNF02	O sistema deve armazenar dados em banco relacional (ex: SQLite ou PostgreSQL).
RNF03	O sistema deve ter tempo de resposta inferior a 2 segundos por requisi√ß√£o.
RNF04	O sistema deve ser responsivo (funcionar em desktop e dispositivos m√≥veis).
RNF05	O sistema deve seguir boas pr√°ticas de seguran√ßa (criptografia de senha, valida√ß√£o de entrada, etc).

5. Requisitos T√©cnicos (RT)
C√≥digo	Descri√ß√£o
RT01	Backend pode ser implementado em Python (Flask ou Django)
RT02	Frontend pode ser feito com HTML/CSS/JavaScript ou framework (ex: React)
RT03	O sistema deve usar autentica√ß√£o baseada em sess√£o ou token (ex: JWT)
RT04	Banco de dados relacional: SQLite (desenvolvimento) / PostgreSQL (produ√ß√£o)
RT05	Pode ser hospedado em servi√ßos como Heroku, Render, Vercel, etc.

6. Usu√°rios do Sistema
Administrador: usu√°rio com permiss√£o de login e acesso completo ao sistema (cadastro e consulta)

7. Fluxo B√°sico de Uso
Usu√°rio acessa a tela de login

Usu√°rio insere e-mail e senha

Se autenticado, √© direcionado √† tela principal

Pode cadastrar novos clientes ou consultar os existentes

Pode encerrar sess√£o com o bot√£o de logout